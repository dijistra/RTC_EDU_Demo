// 
// Copyright (c) 2023 Beijing Volcano Engine Technology Ltd.
// SPDX-License-Identifier: MIT
// 

#import "EduBreakoutRTCManager.h"
#import "EduRTCManager.h"

NS_ASSUME_NONNULL_BEGIN

@interface EduBreakoutRTCManager : EduRTCManager
/*
 * RTC Manager Singletons
 */
+ (EduBreakoutRTCManager *_Nullable)shareRtc;

#pragma mark - Base Method

/**
 * Create RTCEngine instance
 * @param appID The unique identifier of each application is randomly generated by the VRTC console. Instances generated by different AppIds are completely independent for audio and video calls in VRTC and cannot communicate with each other.
 */
- (void)createEngine:(NSString *)appID;
- (void)joinHostRoomWithToken:(NSString *)token roomID:(NSString *)roomID uid:(NSString *)uid;
- (void)joinGroupRoomWithToken:(NSString *)token roomID:(NSString *)roomID uid:(NSString *)uid;

- (void)openGroupSpeech:(BOOL)open;
- (void)openVideoInteract:(BOOL)open;

- (void)setHostRoomRemoteVideo:(ByteRTCVideoCanvas *)videoCanvas
                           uid:(NSString *)uid;

- (void)setGroupRoomRemoteVideo:(ByteRTCVideoCanvas *)videoCanvas
                            uid:(NSString *)uid;

/*
 * Switch local audio capture
 * @param enable ture:Turn on audio capture false：Turn off audio capture
 */
- (void)enableLocalAudio:(BOOL)enable;

/*
 * Switch local video capture
 * @param enable ture:Turn on video capture false：Turn off video capture
 */
- (void)enableLocalVideo:(BOOL)isEnableVideo;

/*
 * Leave the room
 */
- (void)leaveChannel;

/*
 * destroy
 */
- (void)destroy;

/*
 * get Sdk Version
 */
- (NSString *_Nullable)getSdkVersion;

/*
 * Bind the display window of the local video stream
 * @param videoCanvas Video attributes
 */
- (void)setupLocalVideo:(ByteRTCVideoCanvas *_Nullable)videoCanvas;

@end

NS_ASSUME_NONNULL_END
